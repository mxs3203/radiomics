pyrad$volume_from_pyrad = pyrad$original_shape_MeshVolume
pyrad$diameter = pyrad$original_shape_Maximum2DDiameterSlice
Q = 3
pyrad$volume_group = gtools::quantcut(pyrad$volume, q=Q, na.rm=TRUE)
pyrad$diameter_group = gtools::quantcut(pyrad$diameter, q=Q, na.rm=TRUE)
predicted_W = read.delim2("~/GenomeDK_local/CancerEvolution/phd/Analysis/radiomics/NMF_Radiomics/tracerx_predicted.csv",sep = ",")
pyrad = merge(pyrad, predicted_W, by = "sampleid")
colnames(pyrad)[(length(colnames(pyrad))-2):length(colnames(pyrad))] = c("S1", "S2","S3")
p1 = ggplot(pyrad, aes(x = S1,  y = volume)) +
geom_point() +
geom_smooth(method = "lm")+
stat_cor()+
scale_y_log10()+
theme_minimal() +
scale_color_brewer(palette="Set1")
p2 = ggplot(pyrad, aes(x = S2,  y = volume)) +
geom_point() +
geom_smooth(method = "lm")+
stat_cor()+
scale_y_log10()+
theme_minimal() +
scale_color_brewer(palette="Set1")
p3 = ggplot(pyrad, aes(x = S3,  y = volume)) +
geom_point() +
geom_smooth(method = "lm")+
stat_cor()+
scale_y_log10()+
theme_minimal() +
scale_color_brewer(palette="Set1")
ggarrange(p1,p2, p3)
ggplot(pyrad, aes(x = S1,  y = volume)) +
geom_point() +
geom_smooth(method = "lm")+
stat_cor()+
scale_y_log10()+
theme_minimal() +
scale_color_brewer(palette="Set1")
ggplot(pyrad, aes(x = as.numeric(S1),  y = volume)) +
geom_point() +
geom_smooth(method = "lm")+
stat_cor()+
scale_y_log10()+
theme_minimal() +
scale_color_brewer(palette="Set1")
pyrad$S1 = as.numeric(pyrad$S1)
pyrad$S2 = as.numeric(pyrad$S2)
pyrad$S3 = as.numeric(pyrad$S3)
p1 = ggplot(pyrad, aes(x = S1,  y = volume)) +
geom_point() +
geom_smooth(method = "lm")+
stat_cor()+
scale_y_log10()+
theme_minimal() +
scale_color_brewer(palette="Set1")
p2 = ggplot(pyrad, aes(x = S2,  y = volume)) +
geom_point() +
geom_smooth(method = "lm")+
stat_cor()+
scale_y_log10()+
theme_minimal() +
scale_color_brewer(palette="Set1")
p3 = ggplot(pyrad, aes(x = S3,  y = volume)) +
geom_point() +
geom_smooth(method = "lm")+
stat_cor()+
scale_y_log10()+
theme_minimal() +
scale_color_brewer(palette="Set1")
ggarrange(p1,p2, p3)
pyrad = merge(pyrad, new_ith,by = "sampleid", all.x = T)
p1 = ggplot(pyrad %>% filter(!is.na(evo_major_group)), aes(x = evo_major_group,  y = S1, fill = evo_minor_group )) +
geom_boxplot() +
ylab("S1") +
xlab("ITH Groups") +
theme_minimal() +
stat_compare_means() +
scale_fill_brewer(palette="Set1")
p2 = ggplot(pyrad %>% filter(!is.na(evo_major_group)), aes(x = evo_major_group,  y = S2, fill = evo_minor_group )) +
geom_boxplot() +
ylab("S2") +
xlab("ITH Groups") +
theme_minimal() +
stat_compare_means() +
scale_fill_brewer(palette="Set1")
p3 = ggplot(pyrad %>% filter(!is.na(evo_major_group)), aes(x = evo_major_group,  y = S3, fill = evo_minor_group )) +
geom_boxplot() +
ylab("S3") +
xlab("ITH Groups") +
theme_minimal() +
stat_compare_means() +
scale_fill_brewer(palette="Set1")
ggarrange(p1,p2, p3, ncol=3)
pyrad = merge(pyrad, oracle,by = "sampleid", all.x = T)
p1= ggplot(pyrad, aes(x = S1,  y = RiskScore)) +
geom_point() +
ylab("ORACLE Risk Score") +
xlab("S1") +
geom_smooth(method = 'lm') +
theme_minimal() +
stat_cor() +
scale_fill_brewer(palette="Set1")
p2= ggplot(pyrad, aes(x = S2,  y = RiskScore)) +
geom_point() +
ylab("ORACLE Risk Score") +
xlab("S2") +
geom_smooth(method = 'lm') +
theme_minimal() +
stat_cor() +
scale_fill_brewer(palette="Set1")
p3= ggplot(pyrad, aes(x = S3,  y = RiskScore)) +
geom_point() +
ylab("ORACLE Risk Score") +
xlab("S3") +
geom_smooth(method = 'lm') +
theme_minimal() +
stat_cor() +
scale_fill_brewer(palette="Set1")
ggarrange(p1,p2, p3)
pyrad$quantcut_group = gtools::quantcut(pyrad$S3, q=2, na.rm=TRUE)
pyrad = merge(pyrad, mutations, by.y = "SampleID", by.x = "sampleid", all.x = T)
ggplot(pyrad %>% filter(pathology != "Other"), aes(x = S3,
y = volume_from_pyrad,
color = haveEGFR )) +
geom_point() +
scale_y_log10()+
#scale_x_log10()+
geom_hline(yintercept = median(pyrad$volume_from_pyrad, na.rm = T) ,linetype ="dotted")+
geom_vline(xintercept = median(pyrad$S3, na.rm = T),linetype ="dotted" ) +
ylab("Log10(Volume)") +
theme_minimal() +
scale_color_brewer(palette="Set1")+
facet_wrap(~pathology)
pyrad = merge(pyrad, ith2, by.x = "sampleid", by.y = "SampleID", all.x = T)
p1= ggplot(pyrad, aes(x = S2,  y = Homogeneous)) +
geom_point() +
stat_cor()+
geom_smooth(method = "lm", se= F)+
ylab("Homogeneous") +
theme_minimal() +
scale_color_brewer(palette="Set1")
p2= ggplot(pyrad, aes(x = S2,  y = Heterogeneous)) +
geom_point() +
stat_cor()+
geom_smooth(method = "lm",se = F)+
ylab("Heterogeneious") +
theme_minimal() +
scale_color_brewer(palette="Set1")
p3= ggplot(pyrad, aes(x = S2,  y = FractionTrunk )) +
geom_point() +
geom_smooth(method = "lm", se = F)+
ylab("FractionTrunk") +
stat_cor()+
theme_minimal() +
scale_color_brewer(palette="Set1")
ggarrange(p1,p2,p3, nrow = 1,ncol=3)
p1= ggplot(pyrad, aes(x = S1,  y = Homogeneous)) +
geom_point() +
stat_cor()+
geom_smooth(method = "lm", se= F)+
ylab("Homogeneous") +
theme_minimal() +
scale_color_brewer(palette="Set1")
p2= ggplot(pyrad, aes(x = S1,  y = Heterogeneous)) +
geom_point() +
stat_cor()+
geom_smooth(method = "lm",se = F)+
ylab("Heterogeneious") +
theme_minimal() +
scale_color_brewer(palette="Set1")
p3= ggplot(pyrad, aes(x = S1,  y = FractionTrunk )) +
geom_point() +
geom_smooth(method = "lm", se = F)+
ylab("FractionTrunk") +
stat_cor()+
theme_minimal() +
scale_color_brewer(palette="Set1")
ggarrange(p1,p2,p3, nrow = 1,ncol=3)
p1= ggplot(pyrad, aes(x = S3,  y = Homogeneous)) +
geom_point() +
stat_cor()+
geom_smooth(method = "lm", se= F)+
ylab("Homogeneous") +
theme_minimal() +
scale_color_brewer(palette="Set1")
p2= ggplot(pyrad, aes(x = S3,  y = Heterogeneous)) +
geom_point() +
stat_cor()+
geom_smooth(method = "lm",se = F)+
ylab("Heterogeneious") +
theme_minimal() +
scale_color_brewer(palette="Set1")
p3= ggplot(pyrad, aes(x = S3,  y = FractionTrunk )) +
geom_point() +
geom_smooth(method = "lm", se = F)+
ylab("FractionTrunk") +
stat_cor()+
theme_minimal() +
scale_color_brewer(palette="Set1")
ggarrange(p1,p2,p3, nrow = 1,ncol=3)
p1= ggplot(pyrad, aes(x = S2,  y = Homogeneous)) +
geom_point() +
stat_cor()+
geom_smooth(method = "lm", se= F)+
ylab("Homogeneous") +
theme_minimal() +
scale_color_brewer(palette="Set1")
p2= ggplot(pyrad, aes(x = S2,  y = Heterogeneous)) +
geom_point() +
stat_cor()+
geom_smooth(method = "lm",se = F)+
ylab("Heterogeneious") +
theme_minimal() +
scale_color_brewer(palette="Set1")
p3= ggplot(pyrad, aes(x = S2,  y = FractionTrunk )) +
geom_point() +
geom_smooth(method = "lm", se = F)+
ylab("FractionTrunk") +
stat_cor()+
theme_minimal() +
scale_color_brewer(palette="Set1")
ggarrange(p1,p2,p3, nrow = 1,ncol=3)
p1= ggplot(pyrad, aes(x = S1,  y = Homogeneous)) +
geom_point() +
stat_cor()+
geom_smooth(method = "lm", se= F)+
ylab("Homogeneous") +
theme_minimal() +
scale_color_brewer(palette="Set1")
p2= ggplot(pyrad, aes(x = S1,  y = Heterogeneous)) +
geom_point() +
stat_cor()+
geom_smooth(method = "lm",se = F)+
ylab("Heterogeneious") +
theme_minimal() +
scale_color_brewer(palette="Set1")
p3= ggplot(pyrad, aes(x = S1,  y = FractionTrunk )) +
geom_point() +
geom_smooth(method = "lm", se = F)+
ylab("FractionTrunk") +
stat_cor()+
theme_minimal() +
scale_color_brewer(palette="Set1")
ggarrange(p1,p2,p3, nrow = 1,ncol=3)
vega = read.delim2("../../Datasets/sanchez-vega-pws_1026.csv", sep = ";")
muts = get(load("../../Datasets/TRACERx/WES/patientMutTable_20200622.RData"))
muts$SampleID = sub('LTX','LTX0',substr(muts$SampleID, 0,8))
muts = muts %>%
filter(DriverMut == TRUE )
results = data.frame()
samples = c()
for (sample in unique(muts$SampleID)){
samples = c(samples, sample)
tmp_muts = muts %>% filter(SampleID == sample)
have_path_mut = c()
for (geneGroup in unique(vega$Pathway_pretty)) {
vega_group = vega %>% filter(Pathway_pretty == geneGroup)
if (any(vega_group$Gene %in% tmp_muts$Hugo_Symbol == T)) {
have_path_mut = c(have_path_mut, 1)
} else {
have_path_mut = c(have_path_mut, 0)
}
}
results = rbind(results, have_path_mut)
}
colnames(results) = as.character(unique(vega$Pathway))
rownames(results) = samples
results$SampleID = rownames(results)
pyrad = merge(pyrad, results, by.y = "SampleID", by.x = "sampleid", all.x = T)
pyrad$quantcut_group = gtools::quantcut(pyrad$S3, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Squamous cell carcinoma")
for (col in unique(vega$Pathway)){
if(length(unique(tmp[,col])) >= 2){
test = fisher.test(table(tmp$quantcut_group, tmp[,col]))
if (test$p.value <= 0.08){
print(col)
print(test)
}
}
}
pyrad$quantcut_group = gtools::quantcut(pyrad$S2, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Squamous cell carcinoma")
for (col in unique(vega$Pathway)){
if(length(unique(tmp[,col])) >= 2){
test = fisher.test(table(tmp$quantcut_group, tmp[,col]))
if (test$p.value <= 0.08){
print(col)
print(test)
}
}
}
pyrad$quantcut_group = gtools::quantcut(pyrad$S1, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Squamous cell carcinoma")
for (col in unique(vega$Pathway)){
if(length(unique(tmp[,col])) >= 2){
test = fisher.test(table(tmp$quantcut_group, tmp[,col]))
if (test$p.value <= 0.08){
print(col)
print(test)
}
}
}
ggplot(pyrad %>% filter(pathology == "Squamous cell carcinoma"), aes(x = S1,
y = volume,
color = as.factor(wnt ))) +
geom_point() +
scale_y_log10()+
#scale_x_log10()+
geom_hline(yintercept = median(pyrad$volume_from_pyrad, na.rm = T) ,linetype ="dotted")+
geom_vline(xintercept = median(pyrad$S3, na.rm = T),linetype ="dotted" ) +
ylab("Log10(Volume)") +
theme_minimal() +
scale_color_brewer(palette="Set1")+
facet_wrap(~pathology)
ggplot(pyrad %>% filter(pathology == "Squamous cell carcinoma"), aes(x = S1,
y = volume,
color = as.factor(wnt ))) +
geom_point() +
scale_y_log10()+
#scale_x_log10()+
geom_hline(yintercept = median(pyrad$volume, na.rm = T) ,linetype ="dotted")+
geom_vline(xintercept = median(pyrad$S1, na.rm = T),linetype ="dotted" ) +
ylab("Log10(Volume)") +
theme_minimal() +
scale_color_brewer(palette="Set1")+
facet_wrap(~pathology)
pyrad$quantcut_group = gtools::quantcut(pyrad$S1, q=2, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Squamous cell carcinoma")
for (col in unique(vega$Pathway)){
if(length(unique(tmp[,col])) >= 2){
test = fisher.test(table(tmp$quantcut_group, tmp[,col]))
if (test$p.value <= 0.08){
print(col)
print(test)
}
}
}
pyrad$quantcut_group = gtools::quantcut(pyrad$S2, q=2, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Squamous cell carcinoma")
for (col in unique(vega$Pathway)){
if(length(unique(tmp[,col])) >= 2){
test = fisher.test(table(tmp$quantcut_group, tmp[,col]))
if (test$p.value <= 0.08){
print(col)
print(test)
}
}
}
pyrad$quantcut_group = gtools::quantcut(pyrad$S3, q=2, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Squamous cell carcinoma")
for (col in unique(vega$Pathway)){
if(length(unique(tmp[,col])) >= 2){
test = fisher.test(table(tmp$quantcut_group, tmp[,col]))
if (test$p.value <= 0.08){
print(col)
print(test)
}
}
}
pyrad$quantcut_group = gtools::quantcut(pyrad$S1, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Squamous cell carcinoma")
for (col in unique(vega$Pathway)){
if(length(unique(tmp[,col])) >= 2){
test = fisher.test(table(tmp$quantcut_group, tmp[,col]))
if (test$p.value <= 0.08){
print(col)
print(test)
}
}
}
View(pyrad)
View(pyrad)
tmp$pathology
pyrad$pathology
pyrad$quantcut_group = gtools::quantcut(pyrad$S1, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Invasive adenocarcinoma")
for (col in unique(vega$Pathway)){
if(length(unique(tmp[,col])) >= 2){
test = fisher.test(table(tmp$quantcut_group, tmp[,col]))
if (test$p.value <= 0.08){
print(col)
print(test)
}
}
}
pyrad$quantcut_group = gtools::quantcut(pyrad$S2, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Invasive adenocarcinoma")
for (col in unique(vega$Pathway)){
if(length(unique(tmp[,col])) >= 2){
test = fisher.test(table(tmp$quantcut_group, tmp[,col]))
if (test$p.value <= 0.08){
print(col)
print(test)
}
}
}
pyrad$quantcut_group = gtools::quantcut(pyrad$S1, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Invasive adenocarcinoma")
for (col in unique(vega$Pathway)){
if(length(unique(tmp[,col])) >= 2){
test = fisher.test(table(tmp$quantcut_group, tmp[,col]))
if (test$p.value <= 0.08){
print(col)
print(test)
}
}
}
pyrad$quantcut_group = gtools::quantcut(pyrad$S2, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Invasive adenocarcinoma")
for (col in unique(vega$Pathway)){
if(length(unique(tmp[,col])) >= 2){
test = fisher.test(table(tmp$quantcut_group, tmp[,col]))
if (test$p.value <= 0.08){
print(col)
print(test)
}
}
}
pyrad$quantcut_group = gtools::quantcut(pyrad$S3, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Invasive adenocarcinoma")
for (col in unique(vega$Pathway)){
if(length(unique(tmp[,col])) >= 2){
test = fisher.test(table(tmp$quantcut_group, tmp[,col]))
if (test$p.value <= 0.08){
print(col)
print(test)
}
}
}
clin = read_excel("~/Downloads/TRACERx all patients- July 2020 version 2.xlsx")
clin$ID = paste0(substr(clin$Shorter_ID,0,3), "0",substr(clin$Shorter_ID,4, 8))
pyrad = merge(pyrad, clin, by.y = "ID", by.x = "sampleid", all.x = T )
pyrad$quantcut_group = gtools::quantcut(pyrad$S3, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Squamous cell carcinoma")
surv_os <- Surv(as.numeric(as.character(tmp[,'lung_specific_time']))/365, as.numeric(as.character(tmp[,'cens_lung_specific'])))
fit_os <- survfit(survplot::censor(surv_os, 5)~quantcut_group, data = tmp)
makeSurvPlot(fit_os,
"Squamous",
legen_title = "S3 quantiles",
ylab = "Lung spec. surv.",legend_coord = c(0.2,0.5),colors = c())
pyrad$quantcut_group = gtools::quantcut(pyrad$S2, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Squamous cell carcinoma")
surv_os <- Surv(as.numeric(as.character(tmp[,'lung_specific_time']))/365, as.numeric(as.character(tmp[,'cens_lung_specific'])))
fit_os <- survfit(survplot::censor(surv_os, 5)~quantcut_group, data = tmp)
makeSurvPlot(fit_os,
"Squamous",
legen_title = "S3 quantiles",
ylab = "Lung spec. surv.",legend_coord = c(0.2,0.5),colors = c())
pyrad$quantcut_group = gtools::quantcut(pyrad$S1, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Squamous cell carcinoma")
surv_os <- Surv(as.numeric(as.character(tmp[,'lung_specific_time']))/365, as.numeric(as.character(tmp[,'cens_lung_specific'])))
fit_os <- survfit(survplot::censor(surv_os, 5)~quantcut_group, data = tmp)
makeSurvPlot(fit_os,
"Squamous",
legen_title = "S3 quantiles",
ylab = "Lung spec. surv.",legend_coord = c(0.2,0.5),colors = c())
pyrad$quantcut_group = gtools::quantcut(pyrad$S1, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Invasive adenocarcinoma")
surv_os <- Surv(as.numeric(as.character(tmp[,'lung_specific_time']))/365, as.numeric(as.character(tmp[,'cens_lung_specific'])))
fit_os <- survfit(survplot::censor(surv_os, 5)~quantcut_group, data = tmp)
makeSurvPlot(fit_os,
"Adeno",
legen_title = "S3 quantiles",
ylab = "Lung spec. surv.",legend_coord = c(0.2,0.5),colors = c())
makeSurvPlot(fit_os,
"Adeno",
legen_title = "S1 quantiles",
ylab = "Lung spec. surv.",legend_coord = c(0.2,0.5),colors = c())
pyrad$quantcut_group = gtools::quantcut(pyrad$S2, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Invasive adenocarcinoma")
surv_os <- Surv(as.numeric(as.character(tmp[,'lung_specific_time']))/365, as.numeric(as.character(tmp[,'cens_lung_specific'])))
fit_os <- survfit(survplot::censor(surv_os, 5)~quantcut_group, data = tmp)
makeSurvPlot(fit_os,
"Adeno",
legen_title = "S2 quantiles",
ylab = "Lung spec. surv.",legend_coord = c(0.2,0.5),colors = c())
pyrad$quantcut_group = gtools::quantcut(pyrad$S3, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology == "Invasive adenocarcinoma")
surv_os <- Surv(as.numeric(as.character(tmp[,'lung_specific_time']))/365, as.numeric(as.character(tmp[,'cens_lung_specific'])))
fit_os <- survfit(survplot::censor(surv_os, 5)~quantcut_group, data = tmp)
makeSurvPlot(fit_os,
"Adeno",
legen_title = "S2 quantiles",
ylab = "Lung spec. surv.",legend_coord = c(0.2,0.5),colors = c())
makeSurvPlot(fit_os,
"Adeno",
legen_title = "S3 quantiles",
ylab = "Lung spec. surv.",legend_coord = c(0.2,0.5),colors = c())
median_vol = median(pyrad$volume)
median_radITH = median(pyrad$S3)
pyrad$volume_group_med = ifelse(pyrad$volume <= median_vol, "Low", "High")
pyrad$ith_group_med = ifelse(pyrad$S3 <= median_radITH, "Low", "High")
pyrad$iith_volume_group = paste0("Volume: ",pyrad$volume_group_med, "- S3: ",pyrad$ith_group_med )
# "Invasive adenocarcinoma"
# "Squamous cell carcinoma"
pyrad$quantcut_group = gtools::quantcut(pyrad$S3, q=3, na.rm=TRUE)
tmp = pyrad %>% filter(pathology =="Invasive adenocarcinoma", !is.na(pi3k))
ggplot(tmp,
aes(x = S1,  y = volume, color = as.factor(rtk_kras))) +
geom_point() +
scale_y_log10()+
#scale_x_log10()+
geom_hline(yintercept = median(pyrad$volume, na.rm = T), linetype='dotted', col = 'red') +
geom_vline(xintercept = median(pyrad$S1, na.rm = T), linetype='dotted', col = 'red') +
ylab("Log10(Volume)") +
theme_minimal() +
scale_color_brewer(palette="Set1")
ggplot(data = tmp) +
geom_mosaic(aes(x=product(pi3k, quantcut_group), fill = quantcut_group)) +
theme_pubclean() +
scale_fill_brewer(palette="Set1")
ggarrange(p1,p2, nrow = 1)
colnames(clin)
